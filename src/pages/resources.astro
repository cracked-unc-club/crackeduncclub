---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

interface Resource {
  name?: string;
  url: string;
  type: string;
  author?: string;
  btn: string;
  description: string;
}

let resources: Resource[] = [];

try {
  console.log("attempting to fetch resources...");
  const response = await fetch("https://crackedunc.club/api/resources.json");
  console.log("res:", response);
  resources = await response.json();
  console.log("res JSON parsed:", resources);
} catch (err) {
  console.error("err fetching resources:", err);
}

console.log("rendering with resources:", resources);
---

<Layout title="resources">
  <div class="main-container">
    <h1 class="header">resources</h1>
    <p class="smaller">scroll down</p>
    <p class="smaller">
      <span class="lowopacity">(page still in development)</span>
    </p>
    <div class="buttons">
      <div class="button" onclick="location.href='/'">back</div>
    </div>
  </div>

  <div class="resources-container">
    {
      resources.map((resource) => (
        <Card
          title={resource.name || resource.url}
          url={resource.url}
          type={resource.type}
          description={resource.description}
          author={resource.author || "Unknown"}
          btn={resource.type === "pdf" ? "download" : "open"}
        />
      ))
    }
  </div>
</Layout>

<style>
  .main-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 20px;
    width: 100%;
    max-width: 100%;
    margin: auto;
    min-height: 100vh;
  }

  .header {
    color: var(--header);
    font-size: 3rem;
    margin-bottom: 10px;
  }

  .smaller {
    color: var(--smaller);
    font-size: 1.2rem;
    margin-bottom: 20px;
  }

  .buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
  }

  .button {
    font-size: 1rem;
    color: var(--header);
    text-align: center;
    padding: 15px 30px;
    border-radius: 5px;
    background: none;
    border: 2px solid var(--header);
    cursor: pointer;
  }

  .button:hover {
    transition: 0.3s;
    background-color: #ffffff0d;
    color: #ffffff;
    border: solid 1px #ffffff;
    box-shadow: 0px 0px 150px 0px #abd9ff;
    cursor: pointer;
  }

  .resources-container {
    padding: 20px;
    max-width: 120%;
    transform: scale(0.8);
    transform-origin: top;
  }

  ::-webkit-scrollbar {
    width: 12px;
  }

  ::-webkit-scrollbar-track {
    background: #2c2c2c;
  }

  ::-webkit-scrollbar-thumb {
    background: #5353535e;
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
</style>
