---
import Layout from "../layouts/Layout.astro";
---

<Layout title="resources | cracked unc club">
  <div class="main-container">
    <h1 class="header">resources</h1>
    <p class="smaller">scroll down</p>
    <p class="smaller">
      <span class="lowopacity">(page still in development)</span>
    </p>
    <div class="buttons">
      <div class="button" onclick="location.href='/'">back</div>
    </div>
  </div>

  <div id="resources-container" class="resources-container">
    <!-- Resources will be dynamically injected here -->
  </div>
</Layout>
<script>
  interface Resource {
    name?: string;
    url: string;
    type: string;
    author?: string;
    description: string;
  }

  function fetchResources() {
    fetch("https://crackedunc.club/api/resources.json")
      .then((response) => response.json())
      .then((resources: Resource[]) => {
        const container = document.getElementById("resources-container");
        if (!container) {
          console.error("Container not found");
          return;
        }

        container.innerHTML = resources
          .map(
            (resource: Resource) => `
                <div class="resource">
                    <div class="info">
                        <h2 class="title">${resource.name || resource.url}</h2>
                        <p class="meta">${resource.description} by ${resource.author || "Unknown"}</p>
                    </div>
                    <a href="${resource.url}" target="_blank" class="btn">${resource.type === "pdf" ? "download" : "open"}</a>
                </div>
            `
          )
          .join("");
      })
      .catch((error) => console.error("Error fetching resources:", error));
  }

  document.addEventListener("DOMContentLoaded", fetchResources);
</script>
<style>
  .main-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 20px;
    width: 100%;
    max-width: 100%;
    margin: auto;
    min-height: 100vh;
  }

  .header {
    color: var(--header);
    font-size: 3rem;
    margin-bottom: 10px;
  }

  .smaller {
    color: var(--smaller);
    font-size: 1.2rem;
    margin-bottom: 20px;
  }

  .buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
  }

  .button {
    font-size: 1rem;
    color: var(--header);
    text-align: center;
    padding: 15px 30px;
    border-radius: 5px;
    background: none;
    border: 2px solid var(--header);
    cursor: pointer;
  }

  .button:hover {
    transition: 0.3s;
    background-color: #ffffff0d;
    color: #ffffff;
    border: solid 1px #ffffff;
    box-shadow: 0px 0px 150px 0px #abd9ff;
    cursor: pointer;
  }
</style>
